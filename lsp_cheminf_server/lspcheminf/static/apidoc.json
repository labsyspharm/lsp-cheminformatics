{"paths": {"/static/{filename}": {}, "/doc": {}, "/tautomers/enumerate": {"post": {"summary": "Enumerate tautomers for the given compounds.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Tautomerize"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TautomerizeResult"}}}}}}}, "/tautomers/canonicalize": {"post": {"summary": "Find canonical representation of compounds.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Canonicalize"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CanonicalizeResult"}}}}}}}, "/properties/convert": {"post": {"summary": "Convert compound identifiers.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConvertID"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/ConvertIdResult"}}}}}}}, "/properties/mass": {"post": {"summary": "Calculate compound molecular mass.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CalculateMass"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CalculateMassResult"}}}}}}}, "/properties/organic": {"post": {"summary": "Check if compound is organic.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/IsOrganic"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/IsOrganicResult"}}}}}}}, "/draw/grid": {"post": {"summary": "Draw grid of molecules.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/DrawGrid"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/DrawGridResult"}}}}}}}, "/fingerprints/similarity": {"post": {"summary": "Calculate chemical similarity", "description": "Calculate similarity between query and target compounds using chemical fingerprinting.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Similarity"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimilarityResult"}}}}}}}, "/fingerprints/substructure": {"post": {"summary": "Find substructure matches", "description": "Find targets whose substructure matches with a query.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Substructure"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SubstructureResult"}}}}}}}, "/fingerprints/similarity_threshold": {"post": {"summary": "Find similar chemicals", "description": "Find chemically similar compounds up to a certain threshold of similarity. This is much faster than /fingerprints/similarity because it uses the chemfp package and only returns matches that pass the threshold.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimilarityThreshold"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SimilarityResult"}}}}}}}, "/fingerprints/compound_identity": {"post": {"summary": "Find identical compounds", "description": "Compare fingerprints between query and target compounds and find identical compounds using both morgan and topological fingerprints as well as molecular weight.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompoundIdentity"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CompoundIdentityResult"}}}}}}}, "/fingerprints/calculate": {"post": {"summary": "Calculate chemical fingerprints", "description": "Calculate chemical fingerprints for the supplied compound identifiers.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/CalculateFingerprints"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CalculateFingerprintsResult"}}}}}}}, "/fingerprints/maximum_common_substructure": {"post": {"summary": "Calculate MCS", "description": "Calculate maximum common substructure (MCS) of compounds.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MCS"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MCSResult"}}}}}}}, "/fingerprints/murcko_scaffold": {"post": {"summary": "Calculate Murcko scaffold", "description": "Calculate Murcko scaffold of compounds.", "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/MCS"}}}}, "responses": {"200": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MCSResult"}}}}}}}}, "info": {"title": "TAS Chemoinformatics tools", "version": "0.4.1"}, "openapi": "3.0.2", "components": {"schemas": {"Compounds": {"type": "object", "properties": {"fingerprints": {"type": "array", "description": "An optional list of compound fingerprints encoded as hexadecimal strings", "items": {"type": "string"}}, "identifier": {"type": "string", "enum": ["smiles", "inchi", "smarts"], "description": "The type of compound identifiers used", "example": "inchi"}, "names": {"type": "array", "description": "An optional list of compound names", "example": "['Aspirin', 'Dopamine']", "items": {"type": "string"}}, "compounds": {"type": "array", "description": "A list of compound identifiers", "example": "['InChI=1S/C9H8O4/c1-6(10)13-8-5-3-2-4-7(8)9(11)12/h2-5H,1H3,(H,11,12)', 'InChI=1S/C8H11NO2/c9-4-3-6-1-2-7(10)8(11)5-6/h1-2,5,10-11H,3-4,9H2']", "items": {"type": "string"}}}, "required": ["compounds", "identifier"]}, "Tautomerize": {"type": "object", "properties": {"max_tautomers": {"type": "integer", "format": "int32", "default": 10, "description": "Maximum number of tautomers to generate"}, "compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "TautomerizeResult": {"type": "object", "properties": {"tautomers": {}, "skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}}, "required": ["tautomers"]}, "Canonicalize": {"type": "object", "properties": {"standardize": {"type": "boolean", "default": true, "description": "Standardize input molecule before canonicalization. See https://molvs.readthedocs.io/en/latest/guide/standardize.html"}, "compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "CanonicalizeResult": {"type": "object", "properties": {"canonical": {"$ref": "#/components/schemas/Compounds"}, "skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}}, "required": ["canonical"]}, "ConvertID": {"type": "object", "properties": {"target_identifier": {"type": "string", "enum": ["smiles", "inchi", "smarts"], "description": "The type of compound identifiers used", "example": "inchi"}, "compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds", "target_identifier"]}, "ConvertIdResult": {"type": "object", "properties": {"skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}, "compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "CalculateMass": {"type": "object", "properties": {"compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "CalculateMassResult": {"type": "object", "properties": {"mass": {}, "skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}}, "required": ["mass"]}, "IsOrganic": {"type": "object", "properties": {"compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "IsOrganicResult": {"type": "object", "properties": {"organic": {}, "skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}}, "required": ["organic"]}, "DrawGrid": {"type": "object", "properties": {"draw_args": {"default": {}, "description": "Optional additional arguments passed to RDKit molecule drawing function. See https://www.rdkit.org/docs/source/rdkit.Chem.Draw.html?highlight=molstogridimage#rdkit.Chem.Draw.MolsToGridImage", "example": "{\"molsPerRow\": 6}"}, "common_core": {"description": "Optionally, a single common core structure of all compounds used to align them for plotting.", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "compounds": {"$ref": "#/components/schemas/Compounds"}}, "required": ["compounds"]}, "DrawGridResult": {"type": "object", "properties": {"svg": {"type": "string"}, "skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}}}, "Similarity": {"type": "object", "properties": {"fingerprint_args": {"default": {}, "description": "Optional additional arguments passed to RDKit fingerprinting functions. See https://www.rdkit.org/docs/source/rdkit.Chem.rdmolops.html#rdkit.Chem.rdmolops.RDKFingerprint and https://www.rdkit.org/docs/source/rdkit.Chem.rdMolDescriptors.html#rdkit.Chem.rdMolDescriptors.GetMorganFingerprint", "example": "{\"minPath\": 2, \"useHs\": false}"}, "target": {"description": "Target compounds to be compared with the query compounds", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "fingerprint_type": {"type": "string", "default": "topological", "enum": ["topological", "morgan"], "description": "The type of fingerprinting algorithm to be used"}, "query": {"description": "Query compounds to be compared with the target compounds", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}}, "required": ["query", "target"]}, "SimilarityResult": {"type": "object", "properties": {"target": {"type": "array", "items": {"type": "string"}}, "score": {"type": "array", "items": {"type": "number", "format": "float"}}, "query": {"type": "array", "items": {"type": "string"}}}, "required": ["query", "score", "target"]}, "Substructure": {"type": "object", "properties": {"target": {"description": "Target compounds. The substructure of targets will be scanned for matches with the query structures.", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "query": {"description": "Query compounds. Their structure will be compared to the target compounds.", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "substructure_args": {"default": {}, "description": "Optional additional arguments passed to RDKit substructure matching function. See http://www.rdkit.org/docs/source/rdkit.Chem.rdchem.html#rdkit.Chem.rdchem.Mol.GetSubstructMatches", "example": "{\"useChirality\": True, \"maxMatches\": 3}"}}, "required": ["query", "target"]}, "SubstructureResult": {"type": "object", "properties": {"target": {"type": "array", "items": {"type": "string"}}, "query": {"type": "array", "items": {"type": "string"}}, "match": {"type": "array", "items": {"type": "array", "items": {"type": "integer", "format": "int32"}}}}, "required": ["match", "query", "target"]}, "SimilarityThreshold": {"type": "object", "properties": {"target": {"description": "Target compounds to be compared with the query compounds. If omitted query compounds are matched against each other", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "threshold": {"type": "number", "format": "float", "default": 0.7, "minimum": 0, "maximum": 1, "description": "Minimum chemical similarity for matches"}, "fingerprint_type": {"type": "string", "default": "topological", "enum": ["topological", "morgan"], "description": "The type of fingerprinting algorithm to be used"}, "n_threads": {"type": "integer", "format": "int32", "default": 1, "minimum": 1, "maximum": Infinity, "description": "Number of threads used for searching matches"}, "fingerprint_args": {"default": {}, "description": "Optional additional arguments passed to RDKit fingerprinting functions. See https://www.rdkit.org/docs/source/rdkit.Chem.rdmolops.html#rdkit.Chem.rdmolops.RDKFingerprint and https://www.rdkit.org/docs/source/rdkit.Chem.rdMolDescriptors.html#rdkit.Chem.rdMolDescriptors.GetMorganFingerprint", "example": "{\"minPath\": 2, \"useHs\": false}"}, "query": {"description": "Query compounds to be compared with the target compounds", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}}, "required": ["query"]}, "CompoundIdentity": {"type": "object", "properties": {"target": {"description": "Target compounds to be compared with the query compounds. If omitted query compounds are matched against each other", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}, "query": {"description": "Query compounds to be compared with the target compounds", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}}, "required": ["query"]}, "CompoundIdentityResult": {"type": "object", "properties": {"target": {"type": "array", "items": {"type": "string"}}, "query": {"type": "array", "items": {"type": "string"}}}, "required": ["query", "target"]}, "CalculateFingerprints": {"type": "object", "properties": {"fingerprint_args": {"default": {}, "description": "Optional additional arguments passed to RDKit fingerprinting functions. See https://www.rdkit.org/docs/source/rdkit.Chem.rdmolops.html#rdkit.Chem.rdmolops.RDKFingerprint and https://www.rdkit.org/docs/source/rdkit.Chem.rdMolDescriptors.html#rdkit.Chem.rdMolDescriptors.GetMorganFingerprint", "example": "{\"minPath\": 2, \"useHs\": false}"}, "fingerprint_type": {"type": "string", "default": "topological", "enum": ["topological", "morgan"], "description": "The type of fingerprinting algorithm to be used"}, "query": {"description": "Query compounds to be fingerprinted", "allOf": [{"$ref": "#/components/schemas/Compounds"}]}}, "required": ["query"]}, "CalculateFingerprintsResult": {"type": "object", "properties": {"names": {"type": "array", "items": {"type": "string"}}, "fingerprints": {"type": "array", "items": {"type": "string"}}}, "required": ["fingerprints", "names"]}, "MCS": {"type": "object", "properties": {"query": {"$ref": "#/components/schemas/Compounds"}}, "required": ["query"]}, "MCSResult": {"type": "object", "properties": {"skipped": {"type": "array", "description": "A list of compound identifiers that couldn't be processed", "items": {"type": "string"}}, "substructure": {"$ref": "#/components/schemas/Compounds"}}, "required": ["substructure"]}}}}